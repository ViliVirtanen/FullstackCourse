
0.4.  
    selain -> palvelin HTTP POST https://studies.cs.helsinki.fi/exampleapp/new_note
    # selain lähettää dataa jonka jälkeen redirectaus
    palvelin -> selain HTTP GET https://studies.cs.helsinki.fi/exampleapp/notes
    palvelin-->selain: HTML-koodi

    # selain lataa loputkin tiedot redirectauksen jälkeen.
    palvelin -> selain HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.css
    palvelin-->selain: main.css
    palvelin -> selain HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.js
    palvelin-->selain: main.js

    # selain alkaa suorittaa js-koodia
    # joka pyytää JSON-datan palvelimelta
   
    selain->palvelin: HTTP GET https://studies.cs.helsinki.fi/exampleapp/data.json
    palvelin-->selain: [{ content: "HTML on helppoa", date: "2019-01-01" }, ...]

    # json filessä eri data kuin tässä mutta se muuttuu jatkuvasti kuitenkin.
    
    # selain suorittaa tapahtumankäsittelijän
    # joka renderöi muistiinpanot näytölle

0.5.

    selain -> palvelin HTTP GET https://studies.cs.helsinki.fi/exampleapp/spa
    palvelin-->selain: HTML-koodi
    selain->palvelin: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.css
    palvelin-->selain: main.css
    selain->palvelin: HTTP GET https://studies.cs.helsinki.fi/exampleapp/spa.js
    palvelin-->selain: spa.js

    selain alkaa suorittaa js-koodia
    joka pyytää JSON-datan palvelimelta
    selain->palvelin: HTTP GET https://studies.cs.helsinki.fi/exampleapp/data.json
    palvelin-->selain: [{ content: "HTML on helppoa", date: "2019-01-01" }, ...]

    # json filessä eri data kuin tässä mutta se muuttuu jatkuvasti kuitenkin.
    
    # selain suorittaa tapahtumankäsittelijän
    # joka renderöi muistiinpanot näytölle

0.6.

    selain -> HTTP POST https://studies.cs.helsinki.fi/exampleapp/new_note_spa
    # lähettää datan
    # palvelin puskee datan selaimelle näkyviin ilman muita HTTP kutsuja.

